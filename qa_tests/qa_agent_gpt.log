
[1fe89d6f-a24a-11ef-b88e-3c58c25c58c7-start 2024-11-14 13:34:31] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[8a7f5085-198f-4f3a-9f9a-81b7cf34e4a6-start 2024-11-14 13:34:33] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

[4ab5eaff-a24a-11ef-ace3-3c58c25c58c7-start 2024-11-14 13:35:43] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[1ca8d70f-3f83-4063-8653-05f2dcb03cdf-start 2024-11-14 13:35:45] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

[9619136b-a24a-11ef-85c1-3c58c25c58c7-start 2024-11-14 13:37:50] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[225c1173-f392-43f4-bac4-a6988990ce7c-start 2024-11-14 13:37:52] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: User must have access to Test APP and email client.
  # Steps: 
  # 1. Send a new email to DL1 with Subject1 and Body1.
  # 2. Verify that a new ticket XL001 is created in Test APP.
  # 3. Reply to the email with a changed subject (Subject2).
  # 4. Verify that a new ticket XL002 is created and XL001 remains unchanged.
  # Expected Results: 
  # - Ticket XL001 is created with Subject1 and Body1.
  # - Ticket XL002 is created with Subject2.
  # - Ticket XL001 remains unchanged.

  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<user>"
    Then WebAgent is on InboxModule
    And WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<user>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1

    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<user>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2

    When Open ticket by ID "@ticketId2.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And Check ticket Subject is "<Subject2>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    Examples:
      | testAPPWebUIURL | user     | DL1  | Subject1 | Body1 | Subject2 |
      | http://testapp  | TestUser | DL1  | Subject1 | Body1 | Subject2 |

  # Comments:
  # - If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
```

### Comments:
- The script is designed to test the functionality of replying to an email with a changed subject and verifying the creation of a new ticket while ensuring the original ticket remains unchanged.
- The script uses the provided web elements and webui cucumber steps to ensure compliance with the system's syntax standards.
- The script includes placeholders for dynamic data such as `testAPPWebUIURL`, `user`, `DL1`, `Subject1`, `Body1`, and `Subject2`, which are defined in the `Examples` section.
- If additional web elements or steps are needed, they can be defined in the comments section."}

[225c1173-f392-43f4-bac4-a6988990ce7c-end 2024-11-14 13:38:11]

[9619136b-a24a-11ef-85c1-3c58c25c58c7-end 2024-11-14 13:38:11]
[ca55a270-a24a-11ef-b32d-3c58c25c58c7-start 2024-11-14 13:39:17] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[e6a8e9fa-ecf9-49de-8b76-7eb5b50b1d5d-start 2024-11-14 13:39:19] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: TicketingLogic-002
  # This scenario verifies that replying to an email with a changed subject creates a new ticket and does not update the existing ticket.

  @critical
  Scenario Outline: Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule

    # Step 1: Send New Email to DL1 with Subject1 and Body1
    When WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1

    # Step 3: Reply this Email to DL1 with Subject2
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User | DL1 | Subject1 | Body1 | Subject2 |
    | http://testapp.com | TestUser | DL1 | Subject1 | Body1 | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # For example:
  # | Annotation | Condition | Matching Condition |
  # | @And | "^Check ticket Subject is \"([^\"]*)\"$" | Check the ticket's Subject |
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Assumes the user is logged in and on the InboxModule.
- **Steps**: Detailed actions to be performed, including sending an email, checking tickets, and verifying subjects.
- **Expected Results**: Implied in the steps, such as checking the ticket subject.
- **Examples**: Provides parameters for the scenario outline.
- **Comments**: Allows for customization if necessary web elements or steps are not available."}

[e6a8e9fa-ecf9-49de-8b76-7eb5b50b1d5d-end 2024-11-14 13:39:34]

[ca55a270-a24a-11ef-b32d-3c58c25c58c7-end 2024-11-14 13:39:34]
[e167705a-a24a-11ef-874c-3c58c25c58c7-start 2024-11-14 13:39:56] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[d4145300-e9f6-4d3c-b2e9-46d35ced419b-start 2024-11-14 13:39:58] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1 to create a new ticket
    When Login as "<User>"
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And WebAgent type "<DL1>" into mailToText
    And WebAgent type "<Subject1>" into mailSubjectText
    And WebAgent type "<Body1>" into mailContentText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    # Expected Result: A new ticket XL001 is created in Test APP

    # Step 2: Verify that ticket XL001 is created with Subject1 and Body1
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId
    And Open ticket by ID "@ticketId.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    # Expected Result: Ticket XL001 is created with Subject1 and Body1

    # Step 3: Reply to this email to DL1 with Subject2 to create a new ticket
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId.Value"
    Then WebAgent click on typeEmailCommentsRadio
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    # Expected Result: A new ticket XL002 is created in Test APP

    # Step 4: Verify that ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    # Expected Result: Ticket XL001 remains unchanged

    # Step 5: Verify that ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject2>" and save into @newTicketId
    And Open ticket by ID "@newTicketId.Value"
    Then Check ticket Subject is "<Subject2>"
    # Expected Result: Ticket XL002 is created with Subject2

    Examples:
      | testAPPWebUIURL | User   | DL1  | Subject1 | Body1 | Subject2 |
      | http://testapp  | Tester | DL1  | Subject1 | Body1 | Subject2 |

# Comments:
# If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
# For example, to check the ticket body, you might need a custom step like:
# @Then("^Check ticket Body is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier is provided for traceability.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Ensures the necessary setup is in place.
- **Steps**: Detailed actions are provided using Given, When, Then, and And statements.
- **Expected Results**: Describes the expected outcome after each step.
- **Examples**: Provides parameterized data for the scenario.
- **Comments**: Allows for customization if necessary steps or elements are not available."}

[d4145300-e9f6-4d3c-b2e9-46d35ced419b-end 2024-11-14 13:40:14]

[e167705a-a24a-11ef-874c-3c58c25c58c7-end 2024-11-14 13:40:14]
[87ed0afb-a24b-11ef-8e01-3c58c25c58c7-start 2024-11-14 13:44:35] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[9d4042dc-24a4-4833-b1b2-4b755c7231c5-start 2024-11-14 13:44:37] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first after click commentButton1
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: TicketingLogic-002 - Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When WebAgent type "<DL1>" into mailToText
    And WebAgent type "<Subject1>" into mailSubjectText
    And WebAgent type "<Body1>" into mailContentText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    # Expected Result: Create new ticket XL001 in Test APP

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    # Expected Result: Ticket XL001 is created with Subject1 and Body1

    # Step 3: Reply to this email to DL1 with Subject2
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    And WebAgent click on commentsButton2
    And Wait 5 seconds
    # Expected Result: Create new ticket XL002 in Test APP

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    # Expected Result: Ticket XL001 remains unchanged

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    # Expected Result: Ticket XL002 is created with Subject2

  Examples:
    | testAPPWebUIURL | DL1         | Subject1   | Body1       | Subject2   | User          |
    | http://testapp  | DL1@example.com | Subject1 | Body content | Subject2 | TestUser      |

# Comments:
# If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
# For example, if you need a step to verify the ticket content, you might define:
# @Then("^Check ticket content is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites for the test.
- **Steps**: Detailed actions to be performed, using the available web elements and cucumber steps.
- **Expected Results**: Describes the expected outcome after each step.
- **Examples**: Provides the parameters used in the scenario.
- **Comments**: Allows for customization if necessary steps or elements are not available."}

[9d4042dc-24a4-4833-b1b2-4b755c7231c5-end 2024-11-14 13:44:50]

[87ed0afb-a24b-11ef-8e01-3c58c25c58c7-end 2024-11-14 13:44:50]
[b79bd6b6-a24b-11ef-9ab5-3c58c25c58c7-start 2024-11-14 13:45:55] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[1cf45202-3250-44f1-a7ee-5429e2851375-start 2024-11-14 13:45:57] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first after click commentButton1
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: User must have access to Test APP WebUI and email client.
  # Steps: Follow the steps to verify the ticket creation and update logic.
  # Expected Results: Verify that the ticket is created and updated as per the test case.

  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And WebAgent type "<DL1>" into mailToText
    And WebAgent type "<Subject1>" into mailSubjectText
    And WebAgent type "<Body1>" into mailContentText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

    Examples:
      | testAPPWebUIURL | User   | DL1   | Subject1 | Body1 | Subject2 |
      | http://testapp  | Tester | DL1   | Subject1 | Body1 | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one.
  # Example: @And("^Check ticket Subject is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Specifies any prerequisites needed before executing the test case.
- **Steps**: Detailed actions are provided for each step in the test case.
- **Expected Results**: The expected outcomes are described within the steps.
- **Examples**: Parameters used in the scenario are defined in a table.
- **Comments**: Custom steps can be added if necessary."}

[1cf45202-3250-44f1-a7ee-5429e2851375-end 2024-11-14 13:46:15]

[b79bd6b6-a24b-11ef-9ab5-3c58c25c58c7-end 2024-11-14 13:46:15]
[41483b6b-a24c-11ef-af54-3c58c25c58c7-start 2024-11-14 13:49:46] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[37a00a0b-9f51-4805-aafa-d882650b1108-start 2024-11-14 13:49:48] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button. Whether the comment will be used to reply to the email depends on the selection of typeAddCommentsRadio or typeEmailCommentsRadio.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first after click commentButton1
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: TicketingLogic-002
  This feature verifies that replying to an email with a changed subject creates a new ticket and does not update the existing ticket.

  @critical
  Scenario Outline: Reply email with changed subject of existing ticket should update ticket
    Given WebAgent open "<testAPPWebUIURL>" url
    #**************************************************************
    # STEP 1: Send New Email to DL1 with Subject1 and Body1
    #**************************************************************
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    #**************************************************************
    # STEP 2: Open Test APP WebUI to check ticket XL001
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1

    #**************************************************************
    # STEP 3: Reply this Email to DL1 with Subject2
    #**************************************************************
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    #**************************************************************
    # STEP 4: Open Test APP WebUI to check ticket XL001
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"

    #**************************************************************
    # STEP 5: Open Test APP WebUI to check ticket XL002
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User     | DL1          | Subject1 | Body1          | Subject2 |
    | http://testapp  | TestUser | DL1@example.com | Subject1 | Body content 1 | Subject2 |
```

### Comments:
- **Web Elements**: The script uses existing web elements such as `createButton`, `newMessageltem`, `mailFromDropdownlist`, `mailToText`, `mailSubjectText`, `mailContentText`, `mailSendButton`, `inboxIcon`, `commentsButton1`, and `commentsButton2`.
- **WebUI Cucumber Steps**: The script utilizes available steps like `Login as`, `Open ticket by ID`, `Get Ticket ID by Subject`, and `Check ticket Subject is`.
- **Custom Steps**: If any additional steps are needed, they should be defined in comments with appropriate annotations and matching conditions.
- **Expected Results**: The expected results are embedded within the steps, ensuring that the ticket subjects are verified correctly.
- **Examples**: The parameters used in the scenario outline are defined in the examples section, allowing for easy modification and reuse."}

[37a00a0b-9f51-4805-aafa-d882650b1108-end 2024-11-14 13:50:07]

[41483b6b-a24c-11ef-af54-3c58c25c58c7-end 2024-11-14 13:50:07]
[a3062b4c-a24c-11ef-8c1d-3c58c25c58c7-start 2024-11-14 13:52:30] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[7ae988b9-0048-4740-9b40-b82d508c5670-start 2024-11-14 13:52:32] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button. Whether the comment will be used to reply to the email depends on the selection of typeAddCommentsRadio or typeEmailCommentsRadio. You should choose one of those firstly before click commentsButton2
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first after click commentButton1
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic - Email Reply with Changed Subject

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And WebAgent click on inboxIcon
    And Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And WebAgent click on inboxIcon
    And Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And WebAgent click on inboxIcon
    And Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And WebAgent click on inboxIcon
    And Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User   | DL1   | Subject1 | Body1 | Subject2 |
    | http://testapp  | Tester | DL1   | Subject1 | Body1 | Subject2 |

# Comments:
# If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
# For example, if you need a step to check the ticket subject, you can define it as:
# @And("^Check ticket Subject is \"([^\"]*)\"$")
```"}

[7ae988b9-0048-4740-9b40-b82d508c5670-end 2024-11-14 13:52:45]

[a3062b4c-a24c-11ef-8c1d-3c58c25c58c7-end 2024-11-14 13:52:45]
[213c341e-a24d-11ef-ab60-3c58c25c58c7-start 2024-11-14 13:56:02] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[d2924821-71f0-4116-9395-72a8255b722a-start 2024-11-14 13:56:04] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button. Whether the comment will be used to reply to the email depends on the selection of typeAddCommentsRadio or typeEmailCommentsRadio. You should choose one of those firstly before click commentsButton2
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email. After you select commentsButton1, please select this button or the typeEmailCommentsRadio.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email. After you select commentsButton1, please select this button or the typeAddCommentsRadio.
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: TicketingLogic-002
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  # The scenario verifies that replying to an email with a changed subject creates a new ticket instead of updating the existing one.

  @ticketing
  Scenario Outline: Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User   | DL1  | Subject1 | Body1 | Subject2 |
    | http://testapp.com | Tester | DL1 | Subject1 | Body1 | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # For example:
  # | Annotation Condition | Matching Condition |
  # | @And("^Check ticket Subject is \"([^\"]*)\"$") | Check ticket Subject is "<Subject>" |
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites for the test.
- **Steps**: Detailed actions to be performed, using the available web elements and cucumber steps.
- **Expected Results**: Describes the expected outcome of each step.
- **Examples**: Provides the parameters used in the scenario.
- **Comments**: Allows for customization if necessary web elements or steps are not available."}

[d2924821-71f0-4116-9395-72a8255b722a-end 2024-11-14 13:56:25]

[213c341e-a24d-11ef-ab60-3c58c25c58c7-end 2024-11-14 13:56:25]
[6c9e6d3e-a24d-11ef-86f0-3c58c25c58c7-start 2024-11-14 13:58:09] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[f1b718db-2b13-42e7-b76c-5ae28d33c4b6-start 2024-11-14 13:58:10] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button. The premise of clicking this button is that you have selected typeAddCommentsRadio or typeEmailCommentsRadio. You should choose one of those firstly before click commentsButton2
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email. After you select commentsButton1, please select this button or the typeEmailCommentsRadio.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email. After you select commentsButton1, please select this button or the typeAddCommentsRadio.
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: TicketingLogic-002 Reply email with changed subject should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 second
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

    Examples:
      | testAPPWebUIURL | User       | DL1       | Subject1 | Body1          | Subject2 |
      | http://testapp  | TestUser   | DL1       | Subject1 | Body1 content  | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can define them here.
  # For example, you might need a step to check the ticket body:
  # @Then("^Check ticket Body is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites for the test.
- **Steps**: Detailed steps are provided using Given, When, Then, and And statements.
- **Examples**: Parameters are defined for use in the scenario outline.
- **Comments**: Placeholder for any custom steps or elements that may need to be defined."}

[f1b718db-2b13-42e7-b76c-5ae28d33c4b6-end 2024-11-14 13:58:26]

[6c9e6d3e-a24d-11ef-86f0-3c58c25c58c7-end 2024-11-14 13:58:26]
[8c0281a0-a24d-11ef-84ab-3c58c25c58c7-start 2024-11-14 13:59:01] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[321b076e-99ad-41e3-9721-36e7f6f8ffe7-start 2024-11-14 13:59:03] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". The premise of clicking this button is that you have selected typeAddCommentsRadio or typeEmailCommentsRadio. You should choose one of those firstly before click commentsButton2
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email. After you select commentsButton1, please select this button or the typeEmailCommentsRadio.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email. After you select commentsButton1, please select this button or the typeAddCommentsRadio.
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: TicketingLogic-002 - Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When WebAgent type "<DL1>" into mailToText
    And WebAgent type "<Subject1>" into mailSubjectText
    And WebAgent type "<Body1>" into mailContentText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    # Expected Result: Create new ticket XL001 in Test APP

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    # Expected Result: Ticket XL001 is created with Subject1 and Body1

    # Step 3: Reply to this email to DL1 with Subject2
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on replyButton
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    # Expected Result: Create new ticket XL002 in Test APP

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    # Expected Result: Ticket XL001 remains unchanged

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    Then Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"
    # Expected Result: Ticket XL002 is created with Subject2

    Examples:
      | testAPPWebUIURL | DL1          | Subject1   | Body1         | Subject2   | User          |
      | http://testapp  | dl1@example.com | Subject1 | Body content | Subject2 | TestUser      |

  # Comments:
  # - If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # - Ensure that the mailSendButton is only used when sending a new email, not when replying to an email.
```

### Comments:
- This script is designed to test the functionality of updating a ticket when an email is replied to with a changed subject.
- The script uses the provided web elements and webui cucumber steps to ensure compliance with the system's syntax standards.
- The script includes detailed steps and expected results to ensure clarity and accuracy in testing.
- Custom steps or elements can be added if necessary, following the provided guidelines."}

[321b076e-99ad-41e3-9721-36e7f6f8ffe7-end 2024-11-14 13:59:16]

[8c0281a0-a24d-11ef-84ab-3c58c25c58c7-end 2024-11-14 13:59:16]
[c9e1c488-a24d-11ef-ad69-3c58c25c58c7-start 2024-11-14 14:00:45] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[aebca387-4e23-4555-a95d-d6343441f6e2-start 2024-11-14 14:00:47] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email. After you select commentsButton1, please select this button or the typeEmailCommentsRadio.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email. After you select commentsButton1, please select this button or the typeAddCommentsRadio.
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on replyButton
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User   | DL1  | Subject1 | Body1 | Subject2 |
    | http://testapp.com | Admin | DL1 | Subject1 | Body1 | Subject2 |

# Comments:
# - Define a new step for checking ticket body: @And("^Check ticket Body is \"([^\"]*)\"$")
# - Define a new step for clicking the reply button: @When("^WebAgent click on replyButton$")
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Ensures the necessary setup is in place before executing the test.
- **Steps**: Detailed actions to be performed, using the available web elements and system steps.
- **Examples**: Provides the parameters used in the scenario.
- **Comments**: Suggests new steps if existing ones are not available."}

[aebca387-4e23-4555-a95d-d6343441f6e2-end 2024-11-14 14:01:20]

[c9e1c488-a24d-11ef-ad69-3c58c25c58c7-end 2024-11-14 14:01:20]
[ecfcc813-a24d-11ef-a281-3c58c25c58c7-start 2024-11-14 14:01:44] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[f7892521-ad45-4a23-ba6e-e4bcd14a1964-start 2024-11-14 14:01:46] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: TicketingLogic-002 Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User     | DL1  | Subject1 | Body1 | Subject2 |
    | http://testapp  | TestUser | DL1  | Subject1 | Body1 | Subject2 |

  # Comments: 
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # Example: @And("^Check ticket Subject is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier is provided for traceability.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites needed before executing the test.
- **Steps**: Detailed steps using Given, When, Then, and And to describe the actions and checks.
- **Examples**: Provides the data needed for the scenario, using placeholders for dynamic values.
- **Comments**: Notes on customizing steps if needed."}

[f7892521-ad45-4a23-ba6e-e4bcd14a1964-end 2024-11-14 14:02:08]

[ecfcc813-a24d-11ef-a281-3c58c25c58c7-end 2024-11-14 14:02:08]
[372f6a13-a24e-11ef-a96f-3c58c25c58c7-start 2024-11-14 14:03:48] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[c9017bcb-195f-4a5a-90c9-5ca7efbb9f35-start 2024-11-14 14:03:50] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

Common
createButton:  Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem:  "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon:  Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage:  Validation message if Status Remark value not correct
auditTrailTab:  Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage:  Validation message if any error exist when submit message
removeExternalAddressMessage:  Validation Message remind user to remove the external email address in the TO/CC/BCC field

New Message
mailFromDropdownlist:  "Mail From" dropdown list in the new message section
mailFromText:  "Mail From" text field in the new message section
mailToText:  "Mail To" text field in the new message section
mailCcText:  "Mail CC" text field in the new message section
mailBccText:  "Mail BCC" text field in the new message section
mailSubjectText:  "Mail Subject" text field in the new message section
mailContentText:  "Mail Content" text field in the new message section
mailSendButton:  "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption:  "Mail Address Option" in the new message section

Workflow Fields
checkerDropdownList:  "Checker" dropdown list which is checker name
statusRemarkDropdownList:  "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks:  "Maker Remarks" field which user can input text
checkerRemarks:  "Checker Remarks" field which Checker can input text
qcRemarks:  "QC Remarks" field which QC can input text

Inbox List Item
firstInboxListItemBySubject:  The 1st ticket which contains the given Subject.

Workflow Actions Button
commentsButton1:  Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2:  Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton:  Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton:  Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton:  Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList:  "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist:  "Request Type" dropdown list which contains aviliable Request Type
submitButton:  Click the "Submit" Button will perform the Submit action
confirmNotificationButton:  When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton:  Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton:  Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton:  Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton:  Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton:  Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1:  Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2:  Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1:  Click the "Reject 1" button will load Reject section
rejectButton2:  Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton:  Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton:  Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton:  Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton:  Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText:  The text field which allow user to input reason of cancel ticket
reopenButton:  Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton:  Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1:  Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2:  Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist:  "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist:  "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist:  "QC" dropdown list which is qc name
typeAddCommentsRadio:  This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio:  This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
clientInternalReplyAllRadio:  If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1:  Click the "Forward 1" button will load Forward Ticket section
forwardButton2:  Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

Link Ticket
linkButton:  Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton:  Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText:  "Search Ticket To Link" text field allow user input what to search
searchTicketButton:  Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

Update Ticket
updateTicketButton:  Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList:  "Currency" dropdown list field in "Update Ticket" window
amountText:  "Amount" text field in "Update Ticket" window
baseNoText:  "Base No." text field in "Update Ticket" window
clientNameText:  "Client Name" text field in "Update Ticket" window
flexcubeRefnoText:  "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText:  "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList:  "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList:  "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList:  "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic - Email Reply with Changed Subject

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: TicketingLogic-002 - Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: Reply email with changed subject should create a new ticket
    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Verify ticket XL001 is created with Subject1 and Body1
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    # Step 3: Reply to the email with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Verify ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    # Step 5: Verify ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"
    Then Close Browser

  Examples:
    | testAPPWebUIURL | User   | DL1   | Subject1 | Body1  | Subject2 |
    | http://testapp  | Tester | DL1   | Subject1 | Body1  | Subject2 |

# Comments:
# - Define a custom step for checking ticket subject and body if not available:
# @And("^Check ticket Subject is \"([^\"]*)\"$")
# @And("^Check ticket Body is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier is provided for traceability.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Ensures the necessary setup is in place.
- **Steps**: Detailed actions are provided using Given, When, Then, and And statements.
- **Expected Results**: Embedded within the steps to verify outcomes.
- **Examples**: Parameters are defined for use in the scenario.
- **Comments**: Custom steps are suggested if existing ones are not available."}

[c9017bcb-195f-4a5a-90c9-5ca7efbb9f35-end 2024-11-14 14:04:13]

[372f6a13-a24e-11ef-a96f-3c58c25c58c7-end 2024-11-14 14:04:14]
[de48322f-a24e-11ef-850f-3c58c25c58c7-start 2024-11-14 14:08:29] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[8e0eb2ad-d358-4fa1-8e1b-a1b2186ba1f9-start 2024-11-14 14:08:31] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

    Examples:
      | testAPPWebUIURL | User   | DL1   | Subject1 | Body1 | Subject2 |
      | http://testapp  | Tester | DL1   | Subject1 | Body1 | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # For example, if you need a step to check the ticket body, you can define it as:
  # @And("^Check ticket Body is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Assumptions or conditions that must be met before executing the test.
- **Steps**: Detailed actions to be performed, using the available web elements and cucumber steps.
- **Examples**: Parameters used in the scenario outline.
- **Comments**: Instructions for defining new steps if necessary."}

[8e0eb2ad-d358-4fa1-8e1b-a1b2186ba1f9-end 2024-11-14 14:08:46]

[de48322f-a24e-11ef-850f-3c58c25c58c7-end 2024-11-14 14:08:46]
[c1e01169-a24f-11ef-9106-3c58c25c58c7-start 2024-11-14 14:14:51] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[d2ea45d2-5abc-48c0-a89c-6843bc49707b-start 2024-11-14 14:14:53] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: TicketingLogic-002
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  # This scenario tests that replying to an email with a changed subject creates a new ticket and does not update the existing ticket.

  @ticketing
  Scenario Outline: Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

    Examples:
      | testAPPWebUIURL | User   | DL1 | Subject1 | Body1 | Subject2 |
      | http://testapp  | Admin  | DL1 | Subject1 | Body1 | Subject2 |

  # Comments: If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # | Annotation Condition | Matching Condition |
  # | @And("^Check ticket Subject is \"([^\"]*)\"$") | Check the ticket's Subject |
  # | @And("^Check ticket Body is \"([^\"]*)\"$") | Check the ticket's Body |
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites for the test.
- **Steps**: Detailed actions to be performed, using the available web elements and cucumber steps.
- **Expected Results**: Describes the expected outcome after executing the steps.
- **Examples**: Provides the parameters used in the scenario.
- **Comments**: Allows for customization of steps if necessary web elements or steps are not available."}

[d2ea45d2-5abc-48c0-a89c-6843bc49707b-end 2024-11-14 14:15:10]

[c1e01169-a24f-11ef-9106-3c58c25c58c7-end 2024-11-14 14:15:10]
[3286181e-a250-11ef-94f9-3c58c25c58c7-start 2024-11-14 14:18:00] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[1aa811dc-913f-490f-ac79-bd7b43a3e617-start 2024-11-14 14:18:01] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
typeAddCommentsRadio: # If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email
typeEmailCommentsRadio: # If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.If you want to reply to this email, you need to click this button first
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: TicketingLogic-002 - Reply email with changed subject of existing ticket should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1 to create a new ticket
    When Login as "<User>"
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And WebAgent type "<DL1>" into mailToText
    And WebAgent type "<Subject1>" into mailSubjectText
    And WebAgent type "<Body1>" into mailContentText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    # Expected Result: A new ticket XL001 is created in Test APP

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    # Expected Result: Ticket XL001 is created with Subject1 and Body1

    # Step 3: Reply to this email to DL1 with Subject2
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    # Expected Result: A new ticket XL002 is created in Test APP

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Open ticket by ID "@ticketId1.Value"
    # Expected Result: Ticket XL001 remains unchanged

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    # Expected Result: Ticket XL002 is created with Subject2

    Examples:
      | testAPPWebUIURL | User       | DL1          | Subject1   | Body1         | Subject2   |
      | http://testapp  | TestUser   | DL1@example.com | Subject1 | Body content | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Mentioned to ensure the environment setup is correct.
- **Steps**: Detailed steps using Given, When, Then, and And statements to perform actions and verify outcomes.
- **Expected Results**: Comments within the steps to indicate expected outcomes.
- **Examples**: Parameters used in the scenario outline are defined here.
- **Comments**: Instructions for adding custom steps if necessary."}

[1aa811dc-913f-490f-ac79-bd7b43a3e617-end 2024-11-14 14:18:13]

[3286181e-a250-11ef-94f9-3c58c25c58c7-end 2024-11-14 14:18:13]
[f2ce9998-a251-11ef-a4e5-3c58c25c58c7-start 2024-11-14 14:30:32] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[718bab28-2a5c-4786-9303-af607bc73535-start 2024-11-14 14:30:34] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 5: Open Test APP WebUI to check ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

    Examples:
      | testAPPWebUIURL | User   | DL1  | Subject1 | Body1 | Subject2 |
      | http://testapp.com | Admin | DL1 | Subject1 | Body1 | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # For example, @And("^Check ticket Subject is \"([^\"]*)\"$") can be used to verify the subject of the ticket.
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites needed before executing the test case.
- **Steps**: Detailed actions to be performed, using the available web elements and cucumber steps.
- **Examples**: Defines parameters used in the scenario outline.
- **Comments**: Provides additional information or custom steps if needed."}

[718bab28-2a5c-4786-9303-af607bc73535-end 2024-11-14 14:31:17]

[f2ce9998-a251-11ef-a4e5-3c58c25c58c7-end 2024-11-14 14:31:17]
[5176e68d-a253-11ef-a73c-3c58c25c58c7-start 2024-11-14 14:40:20] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[fc65545a-dfe9-4a4f-bec3-f357e14c24ca-start 2024-11-14 14:40:22] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @critical
  Scenario Outline: TicketingLogic-002 - Reply email with changed subject should create a new ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 second
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    And Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    # Step 3: Reply to this email with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    And Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    And Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    And Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"
    Then Close Browser

    Examples:
      | testAPPWebUIURL | User | DL1 | Subject1 | Body1 | Subject2 |
      | http://testapp.com | TestUser | DL1 | Subject1 | Body1 | Subject2 |

  # Comments:
  # If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
  # For example, @And("^Check ticket Subject is \"([^\"]*)\"$") can be used to verify the subject of a ticket.
```

### Explanation:
- **Test Case ID**: A unique identifier for the test case is provided.
- **Scenario Outline**: Describes the scenario being tested.
- **Preconditions**: Lists any prerequisites needed before executing the test.
- **Steps**: Detailed actions to be performed, using the available web elements and cucumber steps.
- **Expected Results**: Implicitly checked within the steps using assertions like `Check ticket Subject is`.
- **Examples**: Defines the parameters used in the scenario outline.
- **Comments**: Provides guidance on customizing steps if necessary."}

[fc65545a-dfe9-4a4f-bec3-f357e14c24ca-end 2024-11-14 14:40:45]

[5176e68d-a253-11ef-a73c-3c58c25c58c7-end 2024-11-14 14:40:45]
[6a785219-a253-11ef-bec4-3c58c25c58c7-start 2024-11-14 14:41:02] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[1d45b1a4-c515-4772-91f8-ca5ad20a8016-start 2024-11-14 14:41:04] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# PROJECT DOCUMENT #
<module 'knowledges.project_document' from 'C:\\Users\\fs\\PycharmProjects\\qa-agent-test\\knowledges\\project_document.py'>

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing Logic

  # Test Case ID: 4d319c0b-4378-48e4-abf5-3ecce88401c7
  # Scenario Outline: Reply email with changed subject of existing ticket should update ticket
  # Preconditions: Ensure that the Test APP WebUI is accessible and the email distribution list DL1 is configured.
  
  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject should update ticket

    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Verify ticket XL001 is created with Subject1 and Body1
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then Check ticket Status is "Created"
    And Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    # Step 3: Reply to the email with a changed subject (Subject2)
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Verify ticket XL001 remains unchanged
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Wait 5 seconds
    Then Check ticket Status is "Created"
    And Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"
    Then Close Browser

    # Step 5: Verify ticket XL002 is created with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Wait 5 seconds
    Then Check ticket Status is "Created"
    And Check ticket Subject is "<Subject2>"
    Then Close Browser

    Examples:
      | testAPPWebUIURL | User     | DL1  | Subject1 | Body1  | Subject2 |
      | http://testapp  | TestUser | DL1  | Subject1 | Body1  | Subject2 |

# Comments:
# If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
# For example, if you need a step to check the ticket body, you can define it as:
# @And("^Check ticket Body is \"([^\"]*)\"$")
```

This script follows the guidelines and uses the provided web elements and steps. It is structured to ensure clarity and compliance with the syntax standards. Each step is associated with the test case, and comments are provided for any custom steps that might be needed."}

[1d45b1a4-c515-4772-91f8-ca5ad20a8016-end 2024-11-14 14:41:29]

[6a785219-a253-11ef-bec4-3c58c25c58c7-end 2024-11-14 14:41:29]
[a26fac08-a266-11ef-b208-3c58c25c58c7-start 2024-11-14 16:58:36] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[dea4a4ba-1c5c-4a6c-9c81-5add85377855-start 2024-11-14 16:58:38] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing System Email Reply Handling
  This feature verifies that replying to an email with a changed subject creates a new ticket in the system.

  @critical
  Scenario Outline: TicketingLogic-002 - Reply email with changed subject should update ticket
    Given WebAgent open "<testAPPWebUIURL>" url
    #**************************************************************
    # STEP 1: Send a new email to DL1 with Subject1 and Body1
    #**************************************************************
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageltem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 second
    And WebAgent click on mailContentText

    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    #**************************************************************
    # STEP 2: Verify ticket XL001 is created with Subject1 and Body1
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    #**************************************************************
    # STEP 3: Reply to the email with Subject2
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    #**************************************************************
    # STEP 4: Verify ticket XL001 remains unchanged
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    #**************************************************************
    # STEP 5: Verify ticket XL002 is created with Subject2
    #**************************************************************
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    And Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

  Examples:
    | testAPPWebUIURL | User   | DL1   | Subject1 | Body1  | Subject2 |
    | http://testapp.com | Tester | DL1 | Subject1 | Body1 | Subject2 |

# Comments:
# - The script assumes the existence of a method to check ticket subject and body.
# - If such methods do not exist, they should be defined as:
#   @And("^Check ticket Subject is \"([^\"]*)\"$")
#   @And("^Check ticket Body is \"([^\"]*)\"$")
```

### Explanation:
- **Test Case ID**: The script is associated with the test case ID `4d319c0b-4378-48e4-abf5-3ecce88401c7`.
- **Scenario Outline**: Describes the scenario being tested, which is the behavior of the ticketing system when replying to an email with a changed subject.
- **Preconditions**: The user must be logged into the system and have access to the inbox module.
- **Steps**: Detailed actions are provided for sending an email, verifying ticket creation, replying with a changed subject, and verifying the creation of a new ticket.
- **Expected Results**: The expected outcomes are checked using assertions to verify ticket subjects and bodies.
- **Examples**: Parameters are defined for the scenario outline, allowing for flexibility in testing different data sets.
- **Comments**: Custom steps are suggested for checking ticket subjects and bodies if they do not already exist."}

[dea4a4ba-1c5c-4a6c-9c81-5add85377855-end 2024-11-14 16:59:57]

[a26fac08-a266-11ef-b208-3c58c25c58c7-end 2024-11-14 16:59:57]
[5e879fa3-a269-11ef-96b7-3c58c25c58c7-start 2024-11-14 17:18:11] step ==> Generate cucumber script ==> Generate cucumber script on TEST CASES
[92d6bdd7-013f-45d1-891b-19efe82d9a54-start 2024-11-14 17:18:13] step ==> Generate Cucumber Script ==> Generate cucumber script base on test cases

{"input":"Human: 
# CONTEXT #
We are a software company, and you are our software test expert. You are tasked with generating a Cucumber script based on the generated test cases.

#############

# OBJECTIVE #
I need you create cucumber scripts for the generated test cases and cucumber knowledge base:
1. Read cucumber knowledge basic example to understand grammar, format, and standard.
2. Review test cases to understand the specific functionalities and learn each Test Step Test Data and Expected Result. You only need to create cucumber scripts for generated test cases, not for whole project document
3. Read available web elements to understand web elements that you can use in the cucumber scripts.
4. Read available webui cucumber system and project steps to understand the step scripts that you can use in the cucumber scripts.
5. Write script files related to test cases based on the provided examples, steps, web elements, and your knowledge.
6. The generated script must be strongly associated with the test case and an explanation related to the test case must be added above each step
7. Do not generate any scripts that do not comply with syntax standards.
#############

# GUIDELINES #
Please follow these guidelines:
1. Convert each test case into a Gherkin format, which includes Given, When, and Then statements.
2. Ensure that each step is clear and concise, using plain language.
3. If applicable, include And statements to combine steps for improved readability.
4. Use tags for scenarios that require specific conditions or environments.

#############

# GENERATED TEST CASES #

id: 4d319c0b-4378-48e4-abf5-3ecce88401c7
Name: TicketingLogic-002
Summary: Reply email with changed subject of existing ticket should update ticket
Priority: Critical

| No. | Test Step | Test Data | Expected Result |
| ----- | ------------------------------------------------ | ---------------------------- | ------------------------------------------------------ |
| 1 | Send New Email to DL1 with Subject1 and Body1 | DL1, Subject1, Body1 | Create new ticket XL001 in Test APP |
| 2 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 is created with Subject1 and Body1 |
| 3 | Reply this Email to DL1 with Subject2 | DL1, Subject2 | Create new ticket XL002 in Test APP |
| 4 | Open Test APP WebUI to check ticket XL001 | XL001 | Ticket XL001 remains unchanged |
| 5 | Open Test APP WebUI to check ticket XL002 | XL002 | Ticket XL002 is created with Subject2 |


#############

# CUCUMBER SCRIPT EXAMPLE #
This is the cucumber script example that has already been written. You can read it to understand the general operating logic of the system.
You need write a script corresponding to the generated test case requirements, but you are not able to copy this example.

Feature:INDIA EM WORKFLOW
  Workflow Detail:
  1)Author:Jevons
  2)Workflow Type:Booking Workflow
  3)DL:*ICG APAC IND SYSTEM DL

  @indiaemail
  Scenario Outline:C162742-11276 INDIA_Booking_Workflow With Reject

    Given WebAgent open "$testAPPWebUIURL"url
#**************************************************************
#  STEP 1:Operation Manager Create New Message in SYSTEM Web
#*************************************************************
    When Login as "$Operation Manager India"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab

    And Select "*ICG APAC IND SYSTEM DL"from mailFromDropdownlist
    And WebAgent type "Guo,Qihua Jevons [TECH]"into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText

    And WebAgent type "Mail Content,send from Web by script ---India Booking Workflow"into mailContentText
    And WebAgent type "[SYSTEM Test]Auto-India Booking Workflow with Reject $TodayDate $RN3"into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

#***************************************************************
#  STEP 2:Operation Manager Save Ticket ID
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "[SYSTEM Test]Auto-India Booking Workflow With Reject"and save into @ticketId
#**************************************************************
#  STEP 3:Operation Manager Update Ticket
#*************************************************************
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    And WebAgent click on updateTicketButton
    Then Wait 3 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Select "<Currency>"from currencyDropdownList
    And WebAgent type "<Amount>"into amountText
    And WebAgent type "<Base No>"into baseNoText
    And WebAgent type "<Client Name>"into clientNameText
    And WebAgent type "<Flexcube Ref no>"into flexcubeRefnoText
    And WebAgent type "<Cosmos Ref no>"into cosmosRefnoText
    Then Select "<Branch>"from branchDropdownList
    Then Select "<Client Segment>"from clientSegmentDropdownList
    Then Select "<Payment Type>"from paymentTypeDropdownList

    Then WebAgent click on submitButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Assigned to Maker"


#***************************************************************
#  STEP 4:Operation Manager Assign To User
#**************************************************************
    Then WebAgent click on assignButton
    Then Wait 2 seconds
    Then WebAgent click on assignToMeButton
    Then Wait 2 seconds

    Then Select "<Request Type>"from requestTypeDropdownlist
    Then Wait 2 seconds
    Then WebAgent click on submitButton
    Then Wait 10 seconds

    Then WebAgent click on confirmNotificationButton if exist
    Then Wait 2 seconds
    Then Check ticket Sub Status is "Assigned to Maker"
#****************************************************
#  STEP 5:Operation Manager Send For Review
#********************************************************
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola"into mailContentText
    And WebAgent type "Send For Review to Nola"into markerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds
    Then WebAgent click on sendForReviewButton

    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser
#*******率率**********************************************
#  STEP 6:Operation Reviewer Reject
#****率率****************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then Wait 1 seconds
    Then WebAgent click on rejectButton
    Then Wait 2 seconds

    And WebAgent type "Checker Reject the ticket"into checkerRemarks
    Then Wait 1 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And Select "No exception"from statusRemarkDropdownList
    Then Wait 1 seconds

    Then WebAgent click on rejectButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Checker Rejected"
    Then Close Browser
#***************************************************************
#  STEP 7:Operation Manager Send For Review
#**************************************************************济
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation_Manager_India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForReviewButton

    And WebAgent type "Send For Review to Nola again"into mailContentText
    And WebAgent type ",Send For Review to Nola again"into markerRemarks
    Then SeLect "No exception"from statusRemarkDropdownList
    Then Select "Chai,Nola [TECH]"from checkerDropdownList
    Then Wait 2 seconds

    Then WebAgent click on sendForReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending Checker Review"
    Then Close Browser

#**************************************************************
#  STEP 8:Operation Reviewer Send For OC Review
#*************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on sendForQCReviewButton

    And WebAgent type "Send For QC Review to Jimmy"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy"into checkerRemarks
    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcpropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser
#***************************************************************
#  STEP 9:Operation OC Reject To Checker
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation OC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on rejectToCheckerButton

    And WebAgent type "Jimmy Reject To Checker"into mailContentText
    And WebAgent type "Jimmy Reject To Checker"into qcRemarks
    Then Wait 2 seconds

    Then WebAgent click on rejectToCheckerButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Rejected To Checker"
    Then Close Browser
#***************************************************************
#  STEP 10:Operation Reviewer Send For OC Review again
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 10 seconds
    When Open ticket by ID "@ticketId.Value"

    Then Wait 5 seconds
    Then WebAgent change to next tab
    Then WebAgent click on reviewButton
    Then WebAgent click on sendForoCReviewButton

    And WebAgent type "Send For QC Review to Jimmy again"into mailContentText
    And WebAgent type ",Send For QC Review to Jimmy again"into checkerRemarks

    Then Select "No exception"from statusRemarkDropdownList
    Then Select "Chen,Jimmy [TECH NE]"from qcDropdownlist
    Then Wait 2 seconds

    Then WebAgent click on sendForQCReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Pending QC Review"
    Then Close Browser

#*************************************************************
#  STEP 11:Operation OC Perform Review
#**************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation QC India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds

    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on reviewButton
    Then WebAgent click on performReviewButton

    And WebAgent type "Jimmy Performed Review"into mailContentText
    And WebAgent type ",Jimmy Performed Review"into qcRemarks

    Then Wait 2 seconds
    Then WebAgent click on performReviewButton
    Then Wait 3 seconds
    Then Check ticket Sub Status is "QC Confirmed"
    Then Close Browser
#**************************************************************
#  STEP 12:Operation Reviewer Close Ticket
#***************************************************************
    Given WebAgent open "$testAPPWebUIURL"url
    When Login as "$Operation Reviewer India"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 15 seconds
    When Open ticket by ID "@ticketId.Value"
    Then Wait 5 seconds
    Then WebAgent change to next tab

    Then WebAgent click on closeTicketButton1
    Then Wait 2 seconds
    Then WebAgent click on typeEmailCommentsRadio
    Then Wait 1 seconds
    And WebAgent type "Close ticket"into mailContentText
    Then Wait 1 seconds
    Then Wait 1 seconds

    And Select "No exception"from statusRemarkDropdownList
    Then WebAgent click on closeTicketButton2
    Then Wait 3 seconds
    Then Check ticket Sub Status is "Closed"
    Then Close Browser

    Examples:
      |Request Type   | Currency| Amount        |Base No    |Client Name      |Flexcube Ref no      |Cosmos Ref no        |Branch client  | Segment |Payment Type             |
      |Booking Process| USD     | 1,540,000.00  |IN0123456  |Auto client Name |Auto Flexcube REf no | Auto Cosmos Ref no  |Mumbai         |TILC     |Internal -client account |

#############

# AVAILABLE WEB ELEMENTS #
You must use the provided web elements as part of the script. 
If there are no web elements you want to use, Please define them in comments at the end, you just need give the name of the web elementes that you want to use.

#Common
createButton: # Click "Create" button, will load second level buttons which contains "New Message"
newMessageltem: # "New Message" button, after click this will create a new browser tab which include new message section
inboxIcon: # Inbox Icon, click this will switch to Inbox Module.
statusRemarkValueNotCorrectMessage: # Validation message if Status Remark value not correct
auditTrailTab: # Audit Trail Tab
correctAllTheErrorsBeforeSubmitMessage: # Validation message if any error exist when submit message
removeExternalAddressMessage: # Validation Message remind user to remove the external email address in the TO/CC/BCC field

#New Message
mailFromDropdownlist: # "Mail From" dropdown list in the new message section
mailFromText: # "Mail From" text field in the new message section
mailToText: # "Mail To" text field in the new message section
mailCcText: # "Mail CC" text field in the new message section
mailBccText: # "Mail BCC" text field in the new message section
mailSubjectText: # "Mail Subject" text field in the new message section
mailContentText: # "Mail Content" text field in the new message section
mailSendButton: # "Mail Send" button only in the new message section. You can only use it when sending a new email, not when replying an email
mailAddressoption: # "Mail Address Option" in the new message section

#Workflow Fields
checkerDropdownList: # "Checker" dropdown list which is checker name
statusRemarkDropdownList: # "Status Remark" dropdown list which value contains "Pending customer", "Clarification/Request", "Pending approvals", "Pending OT Resolution", "Others" and "No exception".
makerRemarks: # "Maker Remarks" field which user can input text
checkerRemarks: # "Checker Remarks" field which Checker can input text
qcRemarks: # "QC Remarks" field which QC can input text

#Inbox List Item
firstInboxListItemBySubject: # The 1st ticket which contains the given Subject.

#Workflow Actions Button
commentsButton1: # Click the "Comment 1" button will load comment section. After clicking this button, you should choose typeAddCommentsRadio or typeEmailCommentsRadio firstly.
commentsButton2: # Click the "Comment 2" button will perform the Comment action, the SUb Status will change to "Updated". If you need to add a comment or reply this email with comment, you can click this button.
typeAddCommentsRadio: # This button in comment section. If choose the "Add Comments" raido button, when user perform any action, it will only add comment without email.
typeEmailCommentsRadio: # This button in comment section. If choose the "Email Comments" raido button, when user perform any action, it will add comment and reply email.
assignButton: # Click the "Assign" button will load second level assign button which contains "Assign to Me" and "Assign To User"
assignToMeButton: # Click the "Assign To Me" button will pop up window of "Assign To Me"
assignToUserButton: # Click the "Assign to User" button will pop up window of "Assign To User"
processingTeamDropdownList: # "Processing Team" dropdown list which contains related Processing Team Name
requestTypeDropdownlist: # "Request Type" dropdown list which contains aviliable Request Type
submitButton: # Click the "Submit" Button will perform the Submit action
confirmNotificationButton: # When the ticket be updated, it will pop up the Notification. After click the "Confirm" Button of notification, it will be closed, then the page will be freshed.
reviewButton: # Click the "Review" Button will load second level review button which contains "Send For Review", "Perform Review", "Reject", "Send For QC Review", "Reject To Maker" and "Reject To Checker".
sendForReviewButton: # Click the "Send For Reivew" button, the ticket Sub Status will change to "Pending Checker Review"
sendForTMReviewButton: # Click the "Send For TM Reivew" button, the ticket Sub Status will change to "Pending TM Review"
sendForoCReviewButton: # Click the "Send For QC" button, the ticket Sub Status will change to "Pending QC Review"
performReviewButton: # Click the "Perform Review" button, the ticket Sub Status will change to "Reviewed Pass"
sendForKLButton1: # Click the "Send For KL 1" button will load Send For KL section
sendForKLButton2: # Click the "Send For KL 2" button will perform the Send For KL action, the Sub Status will change to "Send For KL"
rejectButton1: # Click the "Reject 1" button will load Reject section
rejectButton2: # Click the “Reject 2" button will perform the Reject action, the Sub Status will change to "Rejected"
rejectButton: # Click the "Reject" Button will load second level reject button which contains "Reject To Maker" and "Reject to Checker"
rejectToMakerButton: # Click the "Reject To Maker" button, ticket will return to Maker, and the Sub Status will change to "Rejected To Maker"
rejectToCheckerButton: # Click the "Reject To Checker" button, ticket will return to Checker, and the Sub Status will change to "Rejected To Checker"
cancelButton: # Click the "Cancel" button, it will pop up a "Cancel Window" and let user to input Cancel Reason
cancelReasonText: # The text field which allow user to input reason of cancel ticket
reopenButton: # Click the "Reopen" button, ticket Sub Status will change to "Reopen"
unassignButton: # Click the "Unassign" button, ticket Sub Status will change to "Unassign"
closeTicketButton1: # Click the "Close Ticket 1" button will load Close Ticket section
closeTicketButton2: # Click the ”Close Ticket 2" button will perform the Close action, the Sub Status will change to "Closed"
reviewerDropdownlist: # "Reviewer" dropdown list which is reviewer name
tmReviewerDropdownlist: # "TM Reviewer" dropdown list which is tm reviewer name
qcDropdownlist: # "QC" dropdown list which is qc name
clientInternalReplyAllRadio: # If choose the "Reply All" raido button, the "Email To" will load all email addresses
forwardButton1: # Click the "Forward 1" button will load Forward Ticket section
forwardButton2: # Click the ”Forward 2" button will perform the Forward action, the Sub Status will change to "Forwarded"

#Link Ticket
linkButton: # Click the "Link" button will load second level link button which contains "Add Link" and "Delete Link"
addLinkButton: # Click the "Add Link" button will pop up "Add Link" window
searchTicketToLinkText: # "Search Ticket To Link" text field allow user input what to search
searchTicketButton: # Click the "Search Ticket" button will load the ticket list base on text of field "Search Ticket To Link"

#Update Ticket
updateTicketButton: # Click the "Update Ticket" button will pop up the "Update Ticket" window
currencyDropdownList: # "Currency" dropdown list field in "Update Ticket" window
amountText: # "Amount" text field in "Update Ticket" window
baseNoText: # "Base No." text field in "Update Ticket" window
clientNameText: # "Client Name" text field in "Update Ticket" window
flexcubeRefnoText: # "Flexcube Ref no." text field in "Update Ticket" window
cosmosRefnoText: # "Cosmos Ref no." text field in "Update Ticket" window
branchDropdownList: # "Branch" dropdown list field in "Update Ticket" window contains India city name
clientSegmentDropdownList: # "Client Segment" dropdown list field in "Update Ticket" window contains "CRE", "CFIL", “CCB” and "TTLC"
paymentTypeDropdownList: # "Payment Type" dropdown list field in "Update Ticket" window contains "NEFT/RTGS/Third Party" and "Internal - Client account"

#############
You must use the provided web ui cucumber steps as part of the script. 
If there are no web ui cucumber steps you want to use, Please define them in comments at the end.you need give the annotation conditions and matching conditions, such as @And("^Check ticket Subject is "([^"]*)"$").

# AVAILABLE WEBUI CUCUMBER SYSTEM STEPS #
//Browser click on @webElement
@When("^(\\w+) click on (@?[\\W\\.]+)")

//Browser type text into @inputbox
@When("^(\\w+) type \"([\"]*)\" into (@?[\\w\\.]+)")

//Browser select item from @dropdownlist
@When("^(\w+) select \"([\"]*)\" from (@?[\\w\.]+)")

//Browser check on @checkbox
@When("(\\w+) check on (@?[\\W\\.]*)")

//Browser uncheck on @checkbox
@When("(\\w+)uncheck on (@?[W\\.]*)")

//Browser get text of webElement and save to @variable
@Then("^(\\w+) read text from (@?[\w\\.]+) into (@\\w+)$")

//Browser open url
@When("^(\\w+) open \"([\"]*)\”url$")

//Browser get url of opened page
@Then("^(\\w+) get current url$")

//Browser check if @page is opened
@Then("^(\\w+) (am|is) on (@?[\\w\\.]+)")

//Browser check @webElement exist
@Then("^(\w+) see (@?[\\w\\.]+)")

//Browser refresh page
@Then("^(\w+)refresh$)")

#############

# AVAILABLE WEBUI CUCUMBER PROJECT STEPS #
@Given("^Print Log \"([^\"]*)\"$")  // Print Log info
@Given("^Login as \"([^\"]*)\"$")   // Login system as corresponding user
@Then("Switch Platform to \"([^\"]*)\"$")  // Switch to different platform
@Then("^Switch Queue to \"([^\"]*)\"$") // Switch to different Queue
@Then("^Sign Out$") // Sign out system
@Then("^Close Browser$") // Close browser
@And("^(\\w+) Check on (@?[\\W\\.]+) if exist$") // Check on web element if exist
@Then("^(\\w+) click on (?[\\W\\.]+) if exist$") // Click on web element if exist
@When("^Select\"([^\"]*)\" from (@?[\\w\\.]+)$") // Select value from dropdown list field
@When("^Search and Select instruction id \"([^\"]*)\" from list$") // Search the instruction and select it
@And("^Check Process Status is \"([^\"]*)\"$") // Check the Process Status of instruction
@And("^(w+)check(@?[\w\.]+) value is \"([^\"]*)\"$") // Check the value of web element
@And("^(\\w+)check (@?[\\W\\.]+) value contain \"([^\"]*)\"$") // Check the value of web elment contains some value or not
@And("^Save instruction Id and URL with prefix \"([^\"]*)\" from (?[\W\\.]+) into (\\w+)and (\\w+)$") // Get and save instruction from successful message
@And("^Save Change Request Id from (?[\w\\.]+) into (\\w+)$") // Save change rquest id from successful message
@And("^Get Ticket ID by Subject \"([^\"]*)\" and save into (\\w+)$") // Save Ticket ID from Ticket Subject
@And("^Open ticket by ID \"([^\"]*)\"$") // Open the ticket by given ID
@And("^Select Account Change Request by Request_ID \"([^\"]*)\"$") // Select Account Change Request by Request ID
@And("^Select Account by Account_Number \"([^\"]*)\"$") // Select Account by Account Number
@Given("^Send key CtrlV$") // Perform keyboard action - Ctrl + V
@Given("^Send key Enter$") // Perform keyboard action - Enter
@Given("^Copy \"([^\"]*)\ into clipboard$") // Perofrm keyboard action - Ctrl + C
@Given("^Select Local file with \"([^\"]*)\"$") //Select the local file by given file path
@And("^Check ticket Sub Status is \"([^\"]*)\"$") // Check the ticket's Sub Status
@And("^Check ticket Status is \"([^\"]*)\"$") // Check the ticket's Status
@And("^Check ticket Processing Team is \"([^\"]*)\"$") // Check the ticket's Proessing Team
@And("^Check Latest Activity in Audit Trail is \"([^\"]*)\"$") // Check the Latest Activity in Audit Trail
@And("^Print login user \"([^\"]*)\"$") // Pring Login User name
@And("^Get instruction Id") // Get the instruction ID
@Then("^Wait page loading$") // Wait page loading successfully
@When("^([w\\.]+)not exist$") // Check Web Element not exist
@Given("^read file \"([^\"]*)\" into (\\w+)$") // Read file content

#############

# STYLE #
Style refer to the successful software company, such Google, Microsoft.
You need to refer to existing cucumber scripts,  take them as Example, learn writing habit and format to write test case:

#############

# TONE #
Professional, technical

#############

# AUDIENCE #
The generated cucumber scripts should be detailed and meet the requirements, meet each step and expected result in the test cases, and ensure that the script can run normally

#############

# RESPONSE #

Each generated cucumber scripts includes the following components:

Test Case ID(mandatory): A unique identifier for the test case.
Scenario Outline(mandatory): A brief description of what the test case is intended to verify.
Preconditions(mandatory): Any prerequisites that must be met before executing the test case.
Steps(mandatory): A detailed list of actions to be performed in the test case.
Expected Results(optional): The expected outcome after executing the steps.
Examples(mandatory): The defined parameters you need to use. These parameters need to be used in <>
Comments(optional): If there are no available webui cucumber steps or web elements that you want to use. You can customize a new one and display it in a table

#############

"}

{"output":"```gherkin
Feature: Ticketing System Email Reply Logic
  This feature verifies that replying to an email with a changed subject creates a new ticket in the system.

  @ticketing
  Scenario Outline: TicketingLogic-002 Reply email with changed subject of existing ticket should update ticket
    Given WebAgent open "<testAPPWebUIURL>" url
    # Step 1: Send a new email to DL1 with Subject1 and Body1
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on createButton
    And WebAgent click on newMessageItem
    And Wait 5 seconds
    Then WebAgent change to next tab
    And Select "<DL1>" from mailFromDropdownlist
    And WebAgent type "<DL1>" into mailToText
    Then WebAgent click on mailAddressoption
    And Wait 1 seconds
    And WebAgent click on mailContentText
    And WebAgent type "<Body1>" into mailContentText
    And WebAgent type "<Subject1>" into mailSubjectText
    Then WebAgent click on mailSendButton
    And Wait 5 seconds
    Then Close Browser

    # Step 2: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject1>" and save into @ticketId1
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"
    And Check ticket Body is "<Body1>"

    # Step 3: Reply to this email to DL1 with Subject2
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then WebAgent click on commentsButton1
    And WebAgent type "<Subject2>" into mailSubjectText
    Then WebAgent click on commentsButton2
    And Wait 5 seconds
    Then Close Browser

    # Step 4: Open Test APP WebUI to check ticket XL001
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    When Open ticket by ID "@ticketId1.Value"
    Then Check ticket Subject is "<Subject1>"

    # Step 5: Open Test APP WebUI to check ticket XL002
    Given WebAgent open "<testAPPWebUIURL>" url
    When Login as "<User>"
    Then WebAgent is on InboxModule
    Then WebAgent click on inboxIcon
    Then Wait 20 seconds
    And Get Ticket ID by Subject "<Subject2>" and save into @ticketId2
    When Open ticket by ID "@ticketId2.Value"
    Then Check ticket Subject is "<Subject2>"

    Examples:
      | testAPPWebUIURL | User    | DL1   | Subject1 | Body1   | Subject2 |
      | http://testapp  | Tester1 | DL1   | Subject1 | Body1   | Subject2 |

# Comments:
# - If there are no available webui cucumber steps or web elements that you want to use, you can customize a new one and display it in a table.
# - Ensure that the script can run normally and meets each step and expected result in the test cases.
```

### Explanation:
- **Test Case ID**: The scenario outline is labeled with the test case ID `TicketingLogic-002`.
- **Scenario Outline**: Describes the scenario to verify the functionality of replying to an email with a changed subject.
- **Preconditions**: The user must be logged in and have access to the Test APP WebUI.
- **Steps**: Detailed actions are provided for sending a new email, checking the ticket, replying with a changed subject, and verifying the creation of a new ticket.
- **Examples**: Parameters such as `testAPPWebUIURL`, `User`, `DL1`, `Subject1`, `Body1`, and `Subject2` are defined for use in the scenario.
- **Comments**: Additional notes are provided for customization and ensuring the script's functionality."}

[92d6bdd7-013f-45d1-891b-19efe82d9a54-end 2024-11-14 17:18:56]

[5e879fa3-a269-11ef-96b7-3c58c25c58c7-end 2024-11-14 17:18:56]